-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Integer -> L_integ                                 (1)
	String -> L_quoted                                 (2)
	UIdent -> L_UIdent                                 (3)
	LIdent -> L_LIdent                                 (4)
	Program -> ListDef                                 (5)
	ListDef -> Def '.'                                 (6)
	ListDef -> Def '.' ListDef                         (7)
	Def -> '.decl' LIdent '(' ListTypeArg '|' ListTypeArg ')'   (8)
	Def -> DeclHeader                                  (9)
	Def -> DeclHeader ':-' ListStmt                    (10)
	TypeArg -> UIdent                                  (11)
	TypeArg -> LIdent                                  (12)
	TypeArg -> '[' TypeArg ']'                         (13)
	TypeArg -> TypeArg '(' ListTypeArg ')'             (14)
	ListTypeArg ->                                     (15)
	ListTypeArg -> TypeArg                             (16)
	ListTypeArg -> TypeArg ',' ListTypeArg             (17)
	DeclHeader -> LIdent '(' ListTerm ')'              (18)
	Stmt -> 'True'                                     (19)
	Stmt -> 'False'                                    (20)
	Stmt -> LIdent '(' ListTerm ')'                    (21)
	Stmt -> UIdent '=' Term                            (22)
	Stmt -> UIdent 'is' IExp                           (23)
	Stmt -> IExp RelOp IExp                            (24)
	IExp3 -> UIdent                                    (25)
	IExp3 -> Integer                                   (26)
	IExp3 -> '(' IExp ')'                              (27)
	IExp2 -> '-' IExp3                                 (28)
	IExp2 -> IExp3                                     (29)
	IExp1 -> IExp1 MulOp IExp2                         (30)
	IExp1 -> IExp2                                     (31)
	IExp -> IExp AddOp IExp1                           (32)
	IExp -> IExp1                                      (33)
	AddOp -> '+'                                       (34)
	AddOp -> '-'                                       (35)
	MulOp -> '*'                                       (36)
	MulOp -> '/'                                       (37)
	MulOp -> '%'                                       (38)
	RelOp -> '<'                                       (39)
	RelOp -> '<='                                      (40)
	RelOp -> '>'                                       (41)
	RelOp -> '>='                                      (42)
	RelOp -> '=='                                      (43)
	RelOp -> '!='                                      (44)
	Term -> String                                     (45)
	Term -> Integer                                    (46)
	Term -> UIdent                                     (47)
	Term -> '_'                                        (48)
	Term -> '[' ListTerm ']'                           (49)
	Term -> '(' Term ':' Term ')'                      (50)
	ListTerm ->                                        (51)
	ListTerm -> Term                                   (52)
	ListTerm -> Term ',' ListTerm                      (53)
	ListStmt ->                                        (54)
	ListStmt -> Stmt                                   (55)
	ListStmt -> Stmt ',' ListStmt                      (56)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!='           { PT _ (TS _ 1) }
	'%'            { PT _ (TS _ 2) }
	'('            { PT _ (TS _ 3) }
	')'            { PT _ (TS _ 4) }
	'*'            { PT _ (TS _ 5) }
	'+'            { PT _ (TS _ 6) }
	','            { PT _ (TS _ 7) }
	'-'            { PT _ (TS _ 8) }
	'.'            { PT _ (TS _ 9) }
	'.decl'        { PT _ (TS _ 10) }
	'/'            { PT _ (TS _ 11) }
	':'            { PT _ (TS _ 12) }
	':-'           { PT _ (TS _ 13) }
	'<'            { PT _ (TS _ 14) }
	'<='           { PT _ (TS _ 15) }
	'='            { PT _ (TS _ 16) }
	'=='           { PT _ (TS _ 17) }
	'>'            { PT _ (TS _ 18) }
	'>='           { PT _ (TS _ 19) }
	'False'        { PT _ (TS _ 20) }
	'True'         { PT _ (TS _ 21) }
	'['            { PT _ (TS _ 22) }
	']'            { PT _ (TS _ 23) }
	'_'            { PT _ (TS _ 24) }
	'is'           { PT _ (TS _ 25) }
	'|'            { PT _ (TS _ 26) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }
	L_UIdent       { PT _ (T_UIdent _) }
	L_LIdent       { PT _ (T_LIdent _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Integer         rule  1
	String          rule  2
	UIdent          rule  3
	LIdent          rule  4
	Program         rule  5
	ListDef         rules 6, 7
	Def             rules 8, 9, 10
	TypeArg         rules 11, 12, 13, 14
	ListTypeArg     rules 15, 16, 17
	DeclHeader      rule  18
	Stmt            rules 19, 20, 21, 22, 23, 24
	IExp3           rules 25, 26, 27
	IExp2           rules 28, 29
	IExp1           rules 30, 31
	IExp            rules 32, 33
	AddOp           rules 34, 35
	MulOp           rules 36, 37, 38
	RelOp           rules 39, 40, 41, 42, 43, 44
	Term            rules 45, 46, 47, 48, 49, 50
	ListTerm        rules 51, 52, 53
	ListStmt        rules 54, 55, 56

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'.decl'        shift, and enter state 8
	L_LIdent       shift, and enter state 9

	LIdent         goto state 3
	Program        goto state 4
	ListDef        goto state 5
	Def            goto state 6
	DeclHeader     goto state 7

State 1

	Integer -> . L_integ                                (rule 1)

	L_integ        shift, and enter state 2


State 2

	Integer -> L_integ .                                (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	']'            reduce using rule 1


State 3

	DeclHeader -> LIdent . '(' ListTerm ')'             (rule 18)

	'('            shift, and enter state 13


State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	Program -> ListDef .                                (rule 5)

	%eof           reduce using rule 5


State 6

	ListDef -> Def . '.'                                (rule 6)
	ListDef -> Def . '.' ListDef                        (rule 7)

	'.'            shift, and enter state 12


State 7

	Def -> DeclHeader .                                 (rule 9)
	Def -> DeclHeader . ':-' ListStmt                   (rule 10)

	'.'            reduce using rule 9
	':-'           shift, and enter state 11


State 8

	Def -> '.decl' . LIdent '(' ListTypeArg '|' ListTypeArg ')'    (rule 8)

	L_LIdent       shift, and enter state 9

	LIdent         goto state 10

State 9

	LIdent -> L_LIdent .                                (rule 4)

	'('            reduce using rule 4
	')'            reduce using rule 4
	','            reduce using rule 4
	']'            reduce using rule 4
	'|'            reduce using rule 4


State 10

	Def -> '.decl' LIdent . '(' ListTypeArg '|' ListTypeArg ')'    (rule 8)

	'('            shift, and enter state 38


State 11

	Def -> DeclHeader ':-' . ListStmt                   (rule 10)

	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	'.'            reduce using rule 54
	'False'        shift, and enter state 36
	'True'         shift, and enter state 37
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	Integer        goto state 25
	UIdent         goto state 26
	LIdent         goto state 27
	Stmt           goto state 28
	IExp3          goto state 29
	IExp2          goto state 30
	IExp1          goto state 31
	IExp           goto state 32
	ListStmt       goto state 33

State 12

	ListDef -> Def '.' .                                (rule 6)
	ListDef -> Def '.' . ListDef                        (rule 7)

	'.decl'        shift, and enter state 8
	L_LIdent       shift, and enter state 9
	%eof           reduce using rule 6

	LIdent         goto state 3
	ListDef        goto state 24
	Def            goto state 6
	DeclHeader     goto state 7

State 13

	DeclHeader -> LIdent '(' . ListTerm ')'             (rule 18)

	'('            shift, and enter state 19
	')'            reduce using rule 51
	'['            shift, and enter state 20
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 17
	ListTerm       goto state 18

State 14

	Term -> Integer .                                   (rule 46)

	')'            reduce using rule 46
	','            reduce using rule 46
	'.'            reduce using rule 46
	':'            reduce using rule 46
	']'            reduce using rule 46


State 15

	Term -> String .                                    (rule 45)

	')'            reduce using rule 45
	','            reduce using rule 45
	'.'            reduce using rule 45
	':'            reduce using rule 45
	']'            reduce using rule 45


State 16

	Term -> UIdent .                                    (rule 47)

	')'            reduce using rule 47
	','            reduce using rule 47
	'.'            reduce using rule 47
	':'            reduce using rule 47
	']'            reduce using rule 47


State 17

	ListTerm -> Term .                                  (rule 52)
	ListTerm -> Term . ',' ListTerm                     (rule 53)

	')'            reduce using rule 52
	','            shift, and enter state 68
	']'            reduce using rule 52


State 18

	DeclHeader -> LIdent '(' ListTerm . ')'             (rule 18)

	')'            shift, and enter state 67


State 19

	Term -> '(' . Term ':' Term ')'                     (rule 50)

	'('            shift, and enter state 19
	'['            shift, and enter state 20
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 66

State 20

	Term -> '[' . ListTerm ']'                          (rule 49)

	'('            shift, and enter state 19
	'['            shift, and enter state 20
	']'            reduce using rule 51
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 17
	ListTerm       goto state 65

State 21

	Term -> '_' .                                       (rule 48)

	')'            reduce using rule 48
	','            reduce using rule 48
	'.'            reduce using rule 48
	':'            reduce using rule 48
	']'            reduce using rule 48


State 22

	String -> L_quoted .                                (rule 2)

	')'            reduce using rule 2
	','            reduce using rule 2
	'.'            reduce using rule 2
	':'            reduce using rule 2
	']'            reduce using rule 2


State 23

	UIdent -> L_UIdent .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'.'            reduce using rule 3
	'/'            reduce using rule 3
	':'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'is'           reduce using rule 3
	'|'            reduce using rule 3


State 24

	ListDef -> Def '.' ListDef .                        (rule 7)

	%eof           reduce using rule 7


State 25

	IExp3 -> Integer .                                  (rule 26)

	'!='           reduce using rule 26
	'%'            reduce using rule 26
	')'            reduce using rule 26
	'*'            reduce using rule 26
	'+'            reduce using rule 26
	','            reduce using rule 26
	'-'            reduce using rule 26
	'.'            reduce using rule 26
	'/'            reduce using rule 26
	'<'            reduce using rule 26
	'<='           reduce using rule 26
	'=='           reduce using rule 26
	'>'            reduce using rule 26
	'>='           reduce using rule 26


State 26

	Stmt -> UIdent . '=' Term                           (rule 22)
	Stmt -> UIdent . 'is' IExp                          (rule 23)
	IExp3 -> UIdent .                                   (rule 25)

	'!='           reduce using rule 25
	'%'            reduce using rule 25
	'*'            reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'/'            reduce using rule 25
	'<'            reduce using rule 25
	'<='           reduce using rule 25
	'='            shift, and enter state 63
	'=='           reduce using rule 25
	'>'            reduce using rule 25
	'>='           reduce using rule 25
	'is'           shift, and enter state 64


State 27

	Stmt -> LIdent . '(' ListTerm ')'                   (rule 21)

	'('            shift, and enter state 62


State 28

	ListStmt -> Stmt .                                  (rule 55)
	ListStmt -> Stmt . ',' ListStmt                     (rule 56)

	','            shift, and enter state 61
	'.'            reduce using rule 55


State 29

	IExp2 -> IExp3 .                                    (rule 29)

	'!='           reduce using rule 29
	'%'            reduce using rule 29
	')'            reduce using rule 29
	'*'            reduce using rule 29
	'+'            reduce using rule 29
	','            reduce using rule 29
	'-'            reduce using rule 29
	'.'            reduce using rule 29
	'/'            reduce using rule 29
	'<'            reduce using rule 29
	'<='           reduce using rule 29
	'=='           reduce using rule 29
	'>'            reduce using rule 29
	'>='           reduce using rule 29


State 30

	IExp1 -> IExp2 .                                    (rule 31)

	'!='           reduce using rule 31
	'%'            reduce using rule 31
	')'            reduce using rule 31
	'*'            reduce using rule 31
	'+'            reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'.'            reduce using rule 31
	'/'            reduce using rule 31
	'<'            reduce using rule 31
	'<='           reduce using rule 31
	'=='           reduce using rule 31
	'>'            reduce using rule 31
	'>='           reduce using rule 31


State 31

	IExp1 -> IExp1 . MulOp IExp2                        (rule 30)
	IExp -> IExp1 .                                     (rule 33)

	'!='           reduce using rule 33
	'%'            shift, and enter state 58
	')'            reduce using rule 33
	'*'            shift, and enter state 59
	'+'            reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'.'            reduce using rule 33
	'/'            shift, and enter state 60
	'<'            reduce using rule 33
	'<='           reduce using rule 33
	'=='           reduce using rule 33
	'>'            reduce using rule 33
	'>='           reduce using rule 33

	MulOp          goto state 57

State 32

	Stmt -> IExp . RelOp IExp                           (rule 24)
	IExp -> IExp . AddOp IExp1                          (rule 32)

	'!='           shift, and enter state 49
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51
	'<'            shift, and enter state 52
	'<='           shift, and enter state 53
	'=='           shift, and enter state 54
	'>'            shift, and enter state 55
	'>='           shift, and enter state 56

	AddOp          goto state 47
	RelOp          goto state 48

State 33

	Def -> DeclHeader ':-' ListStmt .                   (rule 10)

	'.'            reduce using rule 10


State 34

	IExp3 -> '(' . IExp ')'                             (rule 27)

	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23

	Integer        goto state 25
	UIdent         goto state 44
	IExp3          goto state 29
	IExp2          goto state 30
	IExp1          goto state 31
	IExp           goto state 46

State 35

	IExp2 -> '-' . IExp3                                (rule 28)

	'('            shift, and enter state 34
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23

	Integer        goto state 25
	UIdent         goto state 44
	IExp3          goto state 45

State 36

	Stmt -> 'False' .                                   (rule 20)

	','            reduce using rule 20
	'.'            reduce using rule 20


State 37

	Stmt -> 'True' .                                    (rule 19)

	','            reduce using rule 19
	'.'            reduce using rule 19


State 38

	Def -> '.decl' LIdent '(' . ListTypeArg '|' ListTypeArg ')'    (rule 8)

	'['            shift, and enter state 43
	'|'            reduce using rule 15
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 39
	LIdent         goto state 40
	TypeArg        goto state 41
	ListTypeArg    goto state 42

State 39

	TypeArg -> UIdent .                                 (rule 11)

	'('            reduce using rule 11
	')'            reduce using rule 11
	','            reduce using rule 11
	']'            reduce using rule 11
	'|'            reduce using rule 11


State 40

	TypeArg -> LIdent .                                 (rule 12)

	'('            reduce using rule 12
	')'            reduce using rule 12
	','            reduce using rule 12
	']'            reduce using rule 12
	'|'            reduce using rule 12


State 41

	TypeArg -> TypeArg . '(' ListTypeArg ')'            (rule 14)
	ListTypeArg -> TypeArg .                            (rule 16)
	ListTypeArg -> TypeArg . ',' ListTypeArg            (rule 17)

	'('            shift, and enter state 82
	')'            reduce using rule 16
	','            shift, and enter state 83
	'|'            reduce using rule 16


State 42

	Def -> '.decl' LIdent '(' ListTypeArg . '|' ListTypeArg ')'    (rule 8)

	'|'            shift, and enter state 81


State 43

	TypeArg -> '[' . TypeArg ']'                        (rule 13)

	'['            shift, and enter state 43
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 39
	LIdent         goto state 40
	TypeArg        goto state 80

State 44

	IExp3 -> UIdent .                                   (rule 25)

	'!='           reduce using rule 25
	'%'            reduce using rule 25
	')'            reduce using rule 25
	'*'            reduce using rule 25
	'+'            reduce using rule 25
	','            reduce using rule 25
	'-'            reduce using rule 25
	'.'            reduce using rule 25
	'/'            reduce using rule 25
	'<'            reduce using rule 25
	'<='           reduce using rule 25
	'=='           reduce using rule 25
	'>'            reduce using rule 25
	'>='           reduce using rule 25


State 45

	IExp2 -> '-' IExp3 .                                (rule 28)

	'!='           reduce using rule 28
	'%'            reduce using rule 28
	')'            reduce using rule 28
	'*'            reduce using rule 28
	'+'            reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	'.'            reduce using rule 28
	'/'            reduce using rule 28
	'<'            reduce using rule 28
	'<='           reduce using rule 28
	'=='           reduce using rule 28
	'>'            reduce using rule 28
	'>='           reduce using rule 28


State 46

	IExp3 -> '(' IExp . ')'                             (rule 27)
	IExp -> IExp . AddOp IExp1                          (rule 32)

	')'            shift, and enter state 79
	'+'            shift, and enter state 50
	'-'            shift, and enter state 51

	AddOp          goto state 47

State 47

	IExp -> IExp AddOp . IExp1                          (rule 32)

	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23

	Integer        goto state 25
	UIdent         goto state 44
	IExp3          goto state 29
	IExp2          goto state 30
	IExp1          goto state 78

State 48

	Stmt -> IExp RelOp . IExp                           (rule 24)

	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23

	Integer        goto state 25
	UIdent         goto state 44
	IExp3          goto state 29
	IExp2          goto state 30
	IExp1          goto state 31
	IExp           goto state 77

State 49

	RelOp -> '!=' .                                     (rule 44)

	'('            reduce using rule 44
	'-'            reduce using rule 44
	L_integ        reduce using rule 44
	L_UIdent       reduce using rule 44


State 50

	AddOp -> '+' .                                      (rule 34)

	'('            reduce using rule 34
	'-'            reduce using rule 34
	L_integ        reduce using rule 34
	L_UIdent       reduce using rule 34


State 51

	AddOp -> '-' .                                      (rule 35)

	'('            reduce using rule 35
	'-'            reduce using rule 35
	L_integ        reduce using rule 35
	L_UIdent       reduce using rule 35


State 52

	RelOp -> '<' .                                      (rule 39)

	'('            reduce using rule 39
	'-'            reduce using rule 39
	L_integ        reduce using rule 39
	L_UIdent       reduce using rule 39


State 53

	RelOp -> '<=' .                                     (rule 40)

	'('            reduce using rule 40
	'-'            reduce using rule 40
	L_integ        reduce using rule 40
	L_UIdent       reduce using rule 40


State 54

	RelOp -> '==' .                                     (rule 43)

	'('            reduce using rule 43
	'-'            reduce using rule 43
	L_integ        reduce using rule 43
	L_UIdent       reduce using rule 43


State 55

	RelOp -> '>' .                                      (rule 41)

	'('            reduce using rule 41
	'-'            reduce using rule 41
	L_integ        reduce using rule 41
	L_UIdent       reduce using rule 41


State 56

	RelOp -> '>=' .                                     (rule 42)

	'('            reduce using rule 42
	'-'            reduce using rule 42
	L_integ        reduce using rule 42
	L_UIdent       reduce using rule 42


State 57

	IExp1 -> IExp1 MulOp . IExp2                        (rule 30)

	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23

	Integer        goto state 25
	UIdent         goto state 44
	IExp3          goto state 29
	IExp2          goto state 76

State 58

	MulOp -> '%' .                                      (rule 38)

	'('            reduce using rule 38
	'-'            reduce using rule 38
	L_integ        reduce using rule 38
	L_UIdent       reduce using rule 38


State 59

	MulOp -> '*' .                                      (rule 36)

	'('            reduce using rule 36
	'-'            reduce using rule 36
	L_integ        reduce using rule 36
	L_UIdent       reduce using rule 36


State 60

	MulOp -> '/' .                                      (rule 37)

	'('            reduce using rule 37
	'-'            reduce using rule 37
	L_integ        reduce using rule 37
	L_UIdent       reduce using rule 37


State 61

	ListStmt -> Stmt ',' . ListStmt                     (rule 56)

	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	'.'            reduce using rule 54
	'False'        shift, and enter state 36
	'True'         shift, and enter state 37
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	Integer        goto state 25
	UIdent         goto state 26
	LIdent         goto state 27
	Stmt           goto state 28
	IExp3          goto state 29
	IExp2          goto state 30
	IExp1          goto state 31
	IExp           goto state 32
	ListStmt       goto state 75

State 62

	Stmt -> LIdent '(' . ListTerm ')'                   (rule 21)

	'('            shift, and enter state 19
	')'            reduce using rule 51
	'['            shift, and enter state 20
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 17
	ListTerm       goto state 74

State 63

	Stmt -> UIdent '=' . Term                           (rule 22)

	'('            shift, and enter state 19
	'['            shift, and enter state 20
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 73

State 64

	Stmt -> UIdent 'is' . IExp                          (rule 23)

	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23

	Integer        goto state 25
	UIdent         goto state 44
	IExp3          goto state 29
	IExp2          goto state 30
	IExp1          goto state 31
	IExp           goto state 72

State 65

	Term -> '[' ListTerm . ']'                          (rule 49)

	']'            shift, and enter state 71


State 66

	Term -> '(' Term . ':' Term ')'                     (rule 50)

	':'            shift, and enter state 70


State 67

	DeclHeader -> LIdent '(' ListTerm ')' .             (rule 18)

	'.'            reduce using rule 18
	':-'           reduce using rule 18


State 68

	ListTerm -> Term ',' . ListTerm                     (rule 53)

	'('            shift, and enter state 19
	')'            reduce using rule 51
	'['            shift, and enter state 20
	']'            reduce using rule 51
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 17
	ListTerm       goto state 69

State 69

	ListTerm -> Term ',' ListTerm .                     (rule 53)

	')'            reduce using rule 53
	']'            reduce using rule 53


State 70

	Term -> '(' Term ':' . Term ')'                     (rule 50)

	'('            shift, and enter state 19
	'['            shift, and enter state 20
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 89

State 71

	Term -> '[' ListTerm ']' .                          (rule 49)

	')'            reduce using rule 49
	','            reduce using rule 49
	'.'            reduce using rule 49
	':'            reduce using rule 49
	']'            reduce using rule 49


State 72

	Stmt -> UIdent 'is' IExp .                          (rule 23)
	IExp -> IExp . AddOp IExp1                          (rule 32)

	'+'            shift, and enter state 50
	','            reduce using rule 23
	'-'            shift, and enter state 51
	'.'            reduce using rule 23

	AddOp          goto state 47

State 73

	Stmt -> UIdent '=' Term .                           (rule 22)

	','            reduce using rule 22
	'.'            reduce using rule 22


State 74

	Stmt -> LIdent '(' ListTerm . ')'                   (rule 21)

	')'            shift, and enter state 88


State 75

	ListStmt -> Stmt ',' ListStmt .                     (rule 56)

	'.'            reduce using rule 56


State 76

	IExp1 -> IExp1 MulOp IExp2 .                        (rule 30)

	'!='           reduce using rule 30
	'%'            reduce using rule 30
	')'            reduce using rule 30
	'*'            reduce using rule 30
	'+'            reduce using rule 30
	','            reduce using rule 30
	'-'            reduce using rule 30
	'.'            reduce using rule 30
	'/'            reduce using rule 30
	'<'            reduce using rule 30
	'<='           reduce using rule 30
	'=='           reduce using rule 30
	'>'            reduce using rule 30
	'>='           reduce using rule 30


State 77

	Stmt -> IExp RelOp IExp .                           (rule 24)
	IExp -> IExp . AddOp IExp1                          (rule 32)

	'+'            shift, and enter state 50
	','            reduce using rule 24
	'-'            shift, and enter state 51
	'.'            reduce using rule 24

	AddOp          goto state 47

State 78

	IExp1 -> IExp1 . MulOp IExp2                        (rule 30)
	IExp -> IExp AddOp IExp1 .                          (rule 32)

	'!='           reduce using rule 32
	'%'            shift, and enter state 58
	')'            reduce using rule 32
	'*'            shift, and enter state 59
	'+'            reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'.'            reduce using rule 32
	'/'            shift, and enter state 60
	'<'            reduce using rule 32
	'<='           reduce using rule 32
	'=='           reduce using rule 32
	'>'            reduce using rule 32
	'>='           reduce using rule 32

	MulOp          goto state 57

State 79

	IExp3 -> '(' IExp ')' .                             (rule 27)

	'!='           reduce using rule 27
	'%'            reduce using rule 27
	')'            reduce using rule 27
	'*'            reduce using rule 27
	'+'            reduce using rule 27
	','            reduce using rule 27
	'-'            reduce using rule 27
	'.'            reduce using rule 27
	'/'            reduce using rule 27
	'<'            reduce using rule 27
	'<='           reduce using rule 27
	'=='           reduce using rule 27
	'>'            reduce using rule 27
	'>='           reduce using rule 27


State 80

	TypeArg -> '[' TypeArg . ']'                        (rule 13)
	TypeArg -> TypeArg . '(' ListTypeArg ')'            (rule 14)

	'('            shift, and enter state 82
	']'            shift, and enter state 87


State 81

	Def -> '.decl' LIdent '(' ListTypeArg '|' . ListTypeArg ')'    (rule 8)

	')'            reduce using rule 15
	'['            shift, and enter state 43
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 39
	LIdent         goto state 40
	TypeArg        goto state 41
	ListTypeArg    goto state 86

State 82

	TypeArg -> TypeArg '(' . ListTypeArg ')'            (rule 14)

	')'            reduce using rule 15
	'['            shift, and enter state 43
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 39
	LIdent         goto state 40
	TypeArg        goto state 41
	ListTypeArg    goto state 85

State 83

	ListTypeArg -> TypeArg ',' . ListTypeArg            (rule 17)

	')'            reduce using rule 15
	'['            shift, and enter state 43
	'|'            reduce using rule 15
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 39
	LIdent         goto state 40
	TypeArg        goto state 41
	ListTypeArg    goto state 84

State 84

	ListTypeArg -> TypeArg ',' ListTypeArg .            (rule 17)

	')'            reduce using rule 17
	'|'            reduce using rule 17


State 85

	TypeArg -> TypeArg '(' ListTypeArg . ')'            (rule 14)

	')'            shift, and enter state 92


State 86

	Def -> '.decl' LIdent '(' ListTypeArg '|' ListTypeArg . ')'    (rule 8)

	')'            shift, and enter state 91


State 87

	TypeArg -> '[' TypeArg ']' .                        (rule 13)

	'('            reduce using rule 13
	')'            reduce using rule 13
	','            reduce using rule 13
	']'            reduce using rule 13
	'|'            reduce using rule 13


State 88

	Stmt -> LIdent '(' ListTerm ')' .                   (rule 21)

	','            reduce using rule 21
	'.'            reduce using rule 21


State 89

	Term -> '(' Term ':' Term . ')'                     (rule 50)

	')'            shift, and enter state 90


State 90

	Term -> '(' Term ':' Term ')' .                     (rule 50)

	')'            reduce using rule 50
	','            reduce using rule 50
	'.'            reduce using rule 50
	':'            reduce using rule 50
	']'            reduce using rule 50


State 91

	Def -> '.decl' LIdent '(' ListTypeArg '|' ListTypeArg ')' .    (rule 8)

	'.'            reduce using rule 8


State 92

	TypeArg -> TypeArg '(' ListTypeArg ')' .            (rule 14)

	'('            reduce using rule 14
	')'            reduce using rule 14
	','            reduce using rule 14
	']'            reduce using rule 14
	'|'            reduce using rule 14


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 57
Number of terminals: 30
Number of non-terminals: 22
Number of states: 93

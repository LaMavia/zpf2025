-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Integer -> L_integ                                 (1)
	String -> L_quoted                                 (2)
	UIdent -> L_UIdent                                 (3)
	LIdent -> L_LIdent                                 (4)
	Program -> ListDef                                 (5)
	ListDef -> Def '.'                                 (6)
	ListDef -> Def '.' ListDef                         (7)
	Def -> '.decl' LIdent '(' ListTypeArg '|' ListTypeArg ')'   (8)
	Def -> DeclHeader                                  (9)
	Def -> DeclHeader ':-' ListStmt                    (10)
	TypeArg -> UIdent                                  (11)
	TypeArg -> LIdent                                  (12)
	TypeArg -> '[' TypeArg ']'                         (13)
	TypeArg -> TypeArg '(' ListTypeArg ')'             (14)
	ListTypeArg ->                                     (15)
	ListTypeArg -> TypeArg                             (16)
	ListTypeArg -> TypeArg ',' ListTypeArg             (17)
	DeclHeader -> LIdent '(' ListTerm ')'              (18)
	Stmt -> 'True'                                     (19)
	Stmt -> 'False'                                    (20)
	Stmt -> LIdent '(' ListTerm ')'                    (21)
	Stmt -> UIdent '=' Term                            (22)
	Term -> String                                     (23)
	Term -> Integer                                    (24)
	Term -> UIdent                                     (25)
	Term -> '_'                                        (26)
	Term -> '[' ListTerm ']'                           (27)
	Term -> '(' Term ':' Term ')'                      (28)
	ListTerm ->                                        (29)
	ListTerm -> Term                                   (30)
	ListTerm -> Term ',' ListTerm                      (31)
	ListStmt ->                                        (32)
	ListStmt -> Stmt                                   (33)
	ListStmt -> Stmt ',' ListStmt                      (34)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	','            { PT _ (TS _ 3) }
	'.'            { PT _ (TS _ 4) }
	'.decl'        { PT _ (TS _ 5) }
	':'            { PT _ (TS _ 6) }
	':-'           { PT _ (TS _ 7) }
	'='            { PT _ (TS _ 8) }
	'False'        { PT _ (TS _ 9) }
	'True'         { PT _ (TS _ 10) }
	'['            { PT _ (TS _ 11) }
	']'            { PT _ (TS _ 12) }
	'_'            { PT _ (TS _ 13) }
	'|'            { PT _ (TS _ 14) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }
	L_UIdent       { PT _ (T_UIdent _) }
	L_LIdent       { PT _ (T_LIdent _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Integer         rule  1
	String          rule  2
	UIdent          rule  3
	LIdent          rule  4
	Program         rule  5
	ListDef         rules 6, 7
	Def             rules 8, 9, 10
	TypeArg         rules 11, 12, 13, 14
	ListTypeArg     rules 15, 16, 17
	DeclHeader      rule  18
	Stmt            rules 19, 20, 21, 22
	Term            rules 23, 24, 25, 26, 27, 28
	ListTerm        rules 29, 30, 31
	ListStmt        rules 32, 33, 34

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'.decl'        shift, and enter state 8
	L_LIdent       shift, and enter state 9

	LIdent         goto state 3
	Program        goto state 4
	ListDef        goto state 5
	Def            goto state 6
	DeclHeader     goto state 7

State 1

	Integer -> . L_integ                                (rule 1)

	L_integ        shift, and enter state 2


State 2

	Integer -> L_integ .                                (rule 1)

	')'            reduce using rule 1
	','            reduce using rule 1
	'.'            reduce using rule 1
	':'            reduce using rule 1
	']'            reduce using rule 1


State 3

	DeclHeader -> LIdent . '(' ListTerm ')'             (rule 18)

	'('            shift, and enter state 13


State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	Program -> ListDef .                                (rule 5)

	%eof           reduce using rule 5


State 6

	ListDef -> Def . '.'                                (rule 6)
	ListDef -> Def . '.' ListDef                        (rule 7)

	'.'            shift, and enter state 12


State 7

	Def -> DeclHeader .                                 (rule 9)
	Def -> DeclHeader . ':-' ListStmt                   (rule 10)

	'.'            reduce using rule 9
	':-'           shift, and enter state 11


State 8

	Def -> '.decl' . LIdent '(' ListTypeArg '|' ListTypeArg ')'    (rule 8)

	L_LIdent       shift, and enter state 9

	LIdent         goto state 10

State 9

	LIdent -> L_LIdent .                                (rule 4)

	'('            reduce using rule 4
	')'            reduce using rule 4
	','            reduce using rule 4
	']'            reduce using rule 4
	'|'            reduce using rule 4


State 10

	Def -> '.decl' LIdent . '(' ListTypeArg '|' ListTypeArg ')'    (rule 8)

	'('            shift, and enter state 31


State 11

	Def -> DeclHeader ':-' . ListStmt                   (rule 10)

	'.'            reduce using rule 32
	'False'        shift, and enter state 29
	'True'         shift, and enter state 30
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 25
	LIdent         goto state 26
	Stmt           goto state 27
	ListStmt       goto state 28

State 12

	ListDef -> Def '.' .                                (rule 6)
	ListDef -> Def '.' . ListDef                        (rule 7)

	'.decl'        shift, and enter state 8
	L_LIdent       shift, and enter state 9
	%eof           reduce using rule 6

	LIdent         goto state 3
	ListDef        goto state 24
	Def            goto state 6
	DeclHeader     goto state 7

State 13

	DeclHeader -> LIdent '(' . ListTerm ')'             (rule 18)

	'('            shift, and enter state 19
	')'            reduce using rule 29
	'['            shift, and enter state 20
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 17
	ListTerm       goto state 18

State 14

	Term -> Integer .                                   (rule 24)

	')'            reduce using rule 24
	','            reduce using rule 24
	'.'            reduce using rule 24
	':'            reduce using rule 24
	']'            reduce using rule 24


State 15

	Term -> String .                                    (rule 23)

	')'            reduce using rule 23
	','            reduce using rule 23
	'.'            reduce using rule 23
	':'            reduce using rule 23
	']'            reduce using rule 23


State 16

	Term -> UIdent .                                    (rule 25)

	')'            reduce using rule 25
	','            reduce using rule 25
	'.'            reduce using rule 25
	':'            reduce using rule 25
	']'            reduce using rule 25


State 17

	ListTerm -> Term .                                  (rule 30)
	ListTerm -> Term . ',' ListTerm                     (rule 31)

	')'            reduce using rule 30
	','            shift, and enter state 43
	']'            reduce using rule 30


State 18

	DeclHeader -> LIdent '(' ListTerm . ')'             (rule 18)

	')'            shift, and enter state 42


State 19

	Term -> '(' . Term ':' Term ')'                     (rule 28)

	'('            shift, and enter state 19
	'['            shift, and enter state 20
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 41

State 20

	Term -> '[' . ListTerm ']'                          (rule 27)

	'('            shift, and enter state 19
	'['            shift, and enter state 20
	']'            reduce using rule 29
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 17
	ListTerm       goto state 40

State 21

	Term -> '_' .                                       (rule 26)

	')'            reduce using rule 26
	','            reduce using rule 26
	'.'            reduce using rule 26
	':'            reduce using rule 26
	']'            reduce using rule 26


State 22

	String -> L_quoted .                                (rule 2)

	')'            reduce using rule 2
	','            reduce using rule 2
	'.'            reduce using rule 2
	':'            reduce using rule 2
	']'            reduce using rule 2


State 23

	UIdent -> L_UIdent .                                (rule 3)

	'('            reduce using rule 3
	')'            reduce using rule 3
	','            reduce using rule 3
	'.'            reduce using rule 3
	':'            reduce using rule 3
	'='            reduce using rule 3
	']'            reduce using rule 3
	'|'            reduce using rule 3


State 24

	ListDef -> Def '.' ListDef .                        (rule 7)

	%eof           reduce using rule 7


State 25

	Stmt -> UIdent . '=' Term                           (rule 22)

	'='            shift, and enter state 39


State 26

	Stmt -> LIdent . '(' ListTerm ')'                   (rule 21)

	'('            shift, and enter state 38


State 27

	ListStmt -> Stmt .                                  (rule 33)
	ListStmt -> Stmt . ',' ListStmt                     (rule 34)

	','            shift, and enter state 37
	'.'            reduce using rule 33


State 28

	Def -> DeclHeader ':-' ListStmt .                   (rule 10)

	'.'            reduce using rule 10


State 29

	Stmt -> 'False' .                                   (rule 20)

	','            reduce using rule 20
	'.'            reduce using rule 20


State 30

	Stmt -> 'True' .                                    (rule 19)

	','            reduce using rule 19
	'.'            reduce using rule 19


State 31

	Def -> '.decl' LIdent '(' . ListTypeArg '|' ListTypeArg ')'    (rule 8)

	'['            shift, and enter state 36
	'|'            reduce using rule 15
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 32
	LIdent         goto state 33
	TypeArg        goto state 34
	ListTypeArg    goto state 35

State 32

	TypeArg -> UIdent .                                 (rule 11)

	'('            reduce using rule 11
	')'            reduce using rule 11
	','            reduce using rule 11
	']'            reduce using rule 11
	'|'            reduce using rule 11


State 33

	TypeArg -> LIdent .                                 (rule 12)

	'('            reduce using rule 12
	')'            reduce using rule 12
	','            reduce using rule 12
	']'            reduce using rule 12
	'|'            reduce using rule 12


State 34

	TypeArg -> TypeArg . '(' ListTypeArg ')'            (rule 14)
	ListTypeArg -> TypeArg .                            (rule 16)
	ListTypeArg -> TypeArg . ',' ListTypeArg            (rule 17)

	'('            shift, and enter state 52
	')'            reduce using rule 16
	','            shift, and enter state 53
	'|'            reduce using rule 16


State 35

	Def -> '.decl' LIdent '(' ListTypeArg . '|' ListTypeArg ')'    (rule 8)

	'|'            shift, and enter state 51


State 36

	TypeArg -> '[' . TypeArg ']'                        (rule 13)

	'['            shift, and enter state 36
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 32
	LIdent         goto state 33
	TypeArg        goto state 50

State 37

	ListStmt -> Stmt ',' . ListStmt                     (rule 34)

	'.'            reduce using rule 32
	'False'        shift, and enter state 29
	'True'         shift, and enter state 30
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 25
	LIdent         goto state 26
	Stmt           goto state 27
	ListStmt       goto state 49

State 38

	Stmt -> LIdent '(' . ListTerm ')'                   (rule 21)

	'('            shift, and enter state 19
	')'            reduce using rule 29
	'['            shift, and enter state 20
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 17
	ListTerm       goto state 48

State 39

	Stmt -> UIdent '=' . Term                           (rule 22)

	'('            shift, and enter state 19
	'['            shift, and enter state 20
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 47

State 40

	Term -> '[' ListTerm . ']'                          (rule 27)

	']'            shift, and enter state 46


State 41

	Term -> '(' Term . ':' Term ')'                     (rule 28)

	':'            shift, and enter state 45


State 42

	DeclHeader -> LIdent '(' ListTerm ')' .             (rule 18)

	'.'            reduce using rule 18
	':-'           reduce using rule 18


State 43

	ListTerm -> Term ',' . ListTerm                     (rule 31)

	'('            shift, and enter state 19
	')'            reduce using rule 29
	'['            shift, and enter state 20
	']'            reduce using rule 29
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 17
	ListTerm       goto state 44

State 44

	ListTerm -> Term ',' ListTerm .                     (rule 31)

	')'            reduce using rule 31
	']'            reduce using rule 31


State 45

	Term -> '(' Term ':' . Term ')'                     (rule 28)

	'('            shift, and enter state 19
	'['            shift, and enter state 20
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 59

State 46

	Term -> '[' ListTerm ']' .                          (rule 27)

	')'            reduce using rule 27
	','            reduce using rule 27
	'.'            reduce using rule 27
	':'            reduce using rule 27
	']'            reduce using rule 27


State 47

	Stmt -> UIdent '=' Term .                           (rule 22)

	','            reduce using rule 22
	'.'            reduce using rule 22


State 48

	Stmt -> LIdent '(' ListTerm . ')'                   (rule 21)

	')'            shift, and enter state 58


State 49

	ListStmt -> Stmt ',' ListStmt .                     (rule 34)

	'.'            reduce using rule 34


State 50

	TypeArg -> '[' TypeArg . ']'                        (rule 13)
	TypeArg -> TypeArg . '(' ListTypeArg ')'            (rule 14)

	'('            shift, and enter state 52
	']'            shift, and enter state 57


State 51

	Def -> '.decl' LIdent '(' ListTypeArg '|' . ListTypeArg ')'    (rule 8)

	')'            reduce using rule 15
	'['            shift, and enter state 36
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 32
	LIdent         goto state 33
	TypeArg        goto state 34
	ListTypeArg    goto state 56

State 52

	TypeArg -> TypeArg '(' . ListTypeArg ')'            (rule 14)

	')'            reduce using rule 15
	'['            shift, and enter state 36
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 32
	LIdent         goto state 33
	TypeArg        goto state 34
	ListTypeArg    goto state 55

State 53

	ListTypeArg -> TypeArg ',' . ListTypeArg            (rule 17)

	')'            reduce using rule 15
	'['            shift, and enter state 36
	'|'            reduce using rule 15
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 32
	LIdent         goto state 33
	TypeArg        goto state 34
	ListTypeArg    goto state 54

State 54

	ListTypeArg -> TypeArg ',' ListTypeArg .            (rule 17)

	')'            reduce using rule 17
	'|'            reduce using rule 17


State 55

	TypeArg -> TypeArg '(' ListTypeArg . ')'            (rule 14)

	')'            shift, and enter state 62


State 56

	Def -> '.decl' LIdent '(' ListTypeArg '|' ListTypeArg . ')'    (rule 8)

	')'            shift, and enter state 61


State 57

	TypeArg -> '[' TypeArg ']' .                        (rule 13)

	'('            reduce using rule 13
	')'            reduce using rule 13
	','            reduce using rule 13
	']'            reduce using rule 13
	'|'            reduce using rule 13


State 58

	Stmt -> LIdent '(' ListTerm ')' .                   (rule 21)

	','            reduce using rule 21
	'.'            reduce using rule 21


State 59

	Term -> '(' Term ':' Term . ')'                     (rule 28)

	')'            shift, and enter state 60


State 60

	Term -> '(' Term ':' Term ')' .                     (rule 28)

	')'            reduce using rule 28
	','            reduce using rule 28
	'.'            reduce using rule 28
	':'            reduce using rule 28
	']'            reduce using rule 28


State 61

	Def -> '.decl' LIdent '(' ListTypeArg '|' ListTypeArg ')' .    (rule 8)

	'.'            reduce using rule 8


State 62

	TypeArg -> TypeArg '(' ListTypeArg ')' .            (rule 14)

	'('            reduce using rule 14
	')'            reduce using rule 14
	','            reduce using rule 14
	']'            reduce using rule 14
	'|'            reduce using rule 14


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 35
Number of terminals: 18
Number of non-terminals: 15
Number of states: 63

-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Integer -> L_integ                                 (1)
	String -> L_quoted                                 (2)
	UIdent -> L_UIdent                                 (3)
	LIdent -> L_LIdent                                 (4)
	Program -> ListDef                                 (5)
	ListDef -> Def '.'                                 (6)
	ListDef -> Def '.' ListDef                         (7)
	Def -> '.decl' LIdent '(' ListTypeArg '|' ListTypeArg ')'   (8)
	Def -> '.decl' LIdent '[' ListConstr ']' '(' ListTypeArg '|' ListTypeArg ')'   (9)
	Def -> DeclHeader                                  (10)
	Def -> DeclHeader ':-' ListStmt                    (11)
	TypeArg -> UIdent                                  (12)
	TypeArg -> LIdent                                  (13)
	TypeArg -> '[' TypeArg ']'                         (14)
	TypeArg -> '(' ListTypeArg ')'                     (15)
	TypeArg -> TypeArg '(' ListTypeArg ')'             (16)
	ListTypeArg ->                                     (17)
	ListTypeArg -> TypeArg                             (18)
	ListTypeArg -> TypeArg ',' ListTypeArg             (19)
	Constr -> UIdent '(' ListConstrVar ')'             (20)
	ConstrVar -> LIdent                                (21)
	ListConstr ->                                      (22)
	ListConstr -> Constr                               (23)
	ListConstr -> Constr ',' ListConstr                (24)
	ListConstrVar ->                                   (25)
	ListConstrVar -> ConstrVar                         (26)
	ListConstrVar -> ConstrVar ',' ListConstrVar       (27)
	DeclHeader -> LIdent '(' ListTerm ')'              (28)
	Stmt -> 'True'                                     (29)
	Stmt -> 'False'                                    (30)
	Stmt -> LIdent '(' ListTerm ')'                    (31)
	Stmt -> UIdent '=' Term                            (32)
	Stmt -> UIdent 'is' IExp                           (33)
	Stmt -> IExp RelOp IExp                            (34)
	Stmt -> Modifier '(' ListTerm ')' ':' LIdent '(' ListTerm ')'   (35)
	Stmt -> '(' Stmt '->' ListStmt ';' ListStmt ')'    (36)
	Modifier -> 'ext'                                  (37)
	Modifier -> 'collect'                              (38)
	Modifier -> 'once'                                 (39)
	IExp3 -> UIdent                                    (40)
	IExp3 -> Integer                                   (41)
	IExp3 -> '(' IExp ')'                              (42)
	IExp2 -> '-' IExp3                                 (43)
	IExp2 -> IExp3                                     (44)
	IExp1 -> IExp1 MulOp IExp2                         (45)
	IExp1 -> IExp2                                     (46)
	IExp -> IExp AddOp IExp1                           (47)
	IExp -> IExp1                                      (48)
	AddOp -> '+'                                       (49)
	AddOp -> '-'                                       (50)
	MulOp -> '*'                                       (51)
	MulOp -> '/'                                       (52)
	MulOp -> '%'                                       (53)
	RelOp -> '<'                                       (54)
	RelOp -> '<='                                      (55)
	RelOp -> '>'                                       (56)
	RelOp -> '>='                                      (57)
	RelOp -> '=='                                      (58)
	RelOp -> '!='                                      (59)
	Term -> String                                     (60)
	Term -> Integer                                    (61)
	Term -> UIdent                                     (62)
	Term -> '_'                                        (63)
	Term -> '[' ListTerm ']'                           (64)
	Term -> '(' Term ':' Term ')'                      (65)
	Term -> '(' ListTerm ')'                           (66)
	Term -> UIdent '(' ListTerm ')'                    (67)
	ListTerm ->                                        (68)
	ListTerm -> Term                                   (69)
	ListTerm -> Term ',' ListTerm                      (70)
	ListStmt ->                                        (71)
	ListStmt -> Stmt                                   (72)
	ListStmt -> Stmt ',' ListStmt                      (73)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!='           { PT _ (TS _ 1) }
	'%'            { PT _ (TS _ 2) }
	'('            { PT _ (TS _ 3) }
	')'            { PT _ (TS _ 4) }
	'*'            { PT _ (TS _ 5) }
	'+'            { PT _ (TS _ 6) }
	','            { PT _ (TS _ 7) }
	'-'            { PT _ (TS _ 8) }
	'->'           { PT _ (TS _ 9) }
	'.'            { PT _ (TS _ 10) }
	'.decl'        { PT _ (TS _ 11) }
	'/'            { PT _ (TS _ 12) }
	':'            { PT _ (TS _ 13) }
	':-'           { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<='           { PT _ (TS _ 17) }
	'='            { PT _ (TS _ 18) }
	'=='           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'False'        { PT _ (TS _ 22) }
	'True'         { PT _ (TS _ 23) }
	'['            { PT _ (TS _ 24) }
	']'            { PT _ (TS _ 25) }
	'_'            { PT _ (TS _ 26) }
	'collect'      { PT _ (TS _ 27) }
	'ext'          { PT _ (TS _ 28) }
	'is'           { PT _ (TS _ 29) }
	'once'         { PT _ (TS _ 30) }
	'|'            { PT _ (TS _ 31) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }
	L_UIdent       { PT _ (T_UIdent _) }
	L_LIdent       { PT _ (T_LIdent _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Integer         rule  1
	String          rule  2
	UIdent          rule  3
	LIdent          rule  4
	Program         rule  5
	ListDef         rules 6, 7
	Def             rules 8, 9, 10, 11
	TypeArg         rules 12, 13, 14, 15, 16
	ListTypeArg     rules 17, 18, 19
	Constr          rule  20
	ConstrVar       rule  21
	ListConstr      rules 22, 23, 24
	ListConstrVar   rules 25, 26, 27
	DeclHeader      rule  28
	Stmt            rules 29, 30, 31, 32, 33, 34, 35, 36
	Modifier        rules 37, 38, 39
	IExp3           rules 40, 41, 42
	IExp2           rules 43, 44
	IExp1           rules 45, 46
	IExp            rules 47, 48
	AddOp           rules 49, 50
	MulOp           rules 51, 52, 53
	RelOp           rules 54, 55, 56, 57, 58, 59
	Term            rules 60, 61, 62, 63, 64, 65, 66, 67
	ListTerm        rules 68, 69, 70
	ListStmt        rules 71, 72, 73

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'.decl'        shift, and enter state 8
	L_LIdent       shift, and enter state 9

	LIdent         goto state 3
	Program        goto state 4
	ListDef        goto state 5
	Def            goto state 6
	DeclHeader     goto state 7

State 1

	Integer -> . L_integ                                (rule 1)

	L_integ        shift, and enter state 2


State 2

	Integer -> L_integ .                                (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'->'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	']'            reduce using rule 1


State 3

	DeclHeader -> LIdent . '(' ListTerm ')'             (rule 28)

	'('            shift, and enter state 13


State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	Program -> ListDef .                                (rule 5)

	%eof           reduce using rule 5


State 6

	ListDef -> Def . '.'                                (rule 6)
	ListDef -> Def . '.' ListDef                        (rule 7)

	'.'            shift, and enter state 12


State 7

	Def -> DeclHeader .                                 (rule 10)
	Def -> DeclHeader . ':-' ListStmt                   (rule 11)

	'.'            reduce using rule 10
	':-'           shift, and enter state 11


State 8

	Def -> '.decl' . LIdent '(' ListTypeArg '|' ListTypeArg ')'    (rule 8)
	Def -> '.decl' . LIdent '[' ListConstr ']' '(' ListTypeArg '|' ListTypeArg ')'    (rule 9)

	L_LIdent       shift, and enter state 9

	LIdent         goto state 10

State 9

	LIdent -> L_LIdent .                                (rule 4)

	'('            reduce using rule 4
	')'            reduce using rule 4
	','            reduce using rule 4
	'['            reduce using rule 4
	']'            reduce using rule 4
	'|'            reduce using rule 4


State 10

	Def -> '.decl' LIdent . '(' ListTypeArg '|' ListTypeArg ')'    (rule 8)
	Def -> '.decl' LIdent . '[' ListConstr ']' '(' ListTypeArg '|' ListTypeArg ')'    (rule 9)

	'('            shift, and enter state 42
	'['            shift, and enter state 43


State 11

	Def -> DeclHeader ':-' . ListStmt                   (rule 11)

	'('            shift, and enter state 35
	'-'            shift, and enter state 36
	'.'            reduce using rule 71
	'False'        shift, and enter state 37
	'True'         shift, and enter state 38
	'collect'      shift, and enter state 39
	'ext'          shift, and enter state 40
	'once'         shift, and enter state 41
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	Integer        goto state 25
	UIdent         goto state 26
	LIdent         goto state 27
	Stmt           goto state 28
	Modifier       goto state 29
	IExp3          goto state 30
	IExp2          goto state 31
	IExp1          goto state 32
	IExp           goto state 33
	ListStmt       goto state 34

State 12

	ListDef -> Def '.' .                                (rule 6)
	ListDef -> Def '.' . ListDef                        (rule 7)

	'.decl'        shift, and enter state 8
	L_LIdent       shift, and enter state 9
	%eof           reduce using rule 6

	LIdent         goto state 3
	ListDef        goto state 24
	Def            goto state 6
	DeclHeader     goto state 7

State 13

	DeclHeader -> LIdent '(' . ListTerm ')'             (rule 28)

	'('            shift, and enter state 19
	')'            reduce using rule 68
	'['            shift, and enter state 20
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 17
	ListTerm       goto state 18

State 14

	Term -> Integer .                                   (rule 61)

	')'            reduce using rule 61
	','            reduce using rule 61
	'->'           reduce using rule 61
	'.'            reduce using rule 61
	':'            reduce using rule 61
	';'            reduce using rule 61
	']'            reduce using rule 61


State 15

	Term -> String .                                    (rule 60)

	')'            reduce using rule 60
	','            reduce using rule 60
	'->'           reduce using rule 60
	'.'            reduce using rule 60
	':'            reduce using rule 60
	';'            reduce using rule 60
	']'            reduce using rule 60


State 16

	Term -> UIdent .                                    (rule 62)
	Term -> UIdent . '(' ListTerm ')'                   (rule 67)

	'('            shift, and enter state 82
	')'            reduce using rule 62
	','            reduce using rule 62
	'->'           reduce using rule 62
	'.'            reduce using rule 62
	':'            reduce using rule 62
	';'            reduce using rule 62
	']'            reduce using rule 62


State 17

	ListTerm -> Term .                                  (rule 69)
	ListTerm -> Term . ',' ListTerm                     (rule 70)

	')'            reduce using rule 69
	','            shift, and enter state 81
	']'            reduce using rule 69


State 18

	DeclHeader -> LIdent '(' ListTerm . ')'             (rule 28)

	')'            shift, and enter state 80


State 19

	Term -> '(' . Term ':' Term ')'                     (rule 65)
	Term -> '(' . ListTerm ')'                          (rule 66)

	'('            shift, and enter state 19
	')'            reduce using rule 68
	'['            shift, and enter state 20
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 78
	ListTerm       goto state 79

State 20

	Term -> '[' . ListTerm ']'                          (rule 64)

	'('            shift, and enter state 19
	'['            shift, and enter state 20
	']'            reduce using rule 68
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 17
	ListTerm       goto state 77

State 21

	Term -> '_' .                                       (rule 63)

	')'            reduce using rule 63
	','            reduce using rule 63
	'->'           reduce using rule 63
	'.'            reduce using rule 63
	':'            reduce using rule 63
	';'            reduce using rule 63
	']'            reduce using rule 63


State 22

	String -> L_quoted .                                (rule 2)

	')'            reduce using rule 2
	','            reduce using rule 2
	'->'           reduce using rule 2
	'.'            reduce using rule 2
	':'            reduce using rule 2
	';'            reduce using rule 2
	']'            reduce using rule 2


State 23

	UIdent -> L_UIdent .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'->'           reduce using rule 3
	'.'            reduce using rule 3
	'/'            reduce using rule 3
	':'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'is'           reduce using rule 3
	'|'            reduce using rule 3


State 24

	ListDef -> Def '.' ListDef .                        (rule 7)

	%eof           reduce using rule 7


State 25

	IExp3 -> Integer .                                  (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'->'           reduce using rule 41
	'.'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41


State 26

	Stmt -> UIdent . '=' Term                           (rule 32)
	Stmt -> UIdent . 'is' IExp                          (rule 33)
	IExp3 -> UIdent .                                   (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'='            shift, and enter state 75
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'is'           shift, and enter state 76


State 27

	Stmt -> LIdent . '(' ListTerm ')'                   (rule 31)

	'('            shift, and enter state 74


State 28

	ListStmt -> Stmt .                                  (rule 72)
	ListStmt -> Stmt . ',' ListStmt                     (rule 73)

	')'            reduce using rule 72
	','            shift, and enter state 73
	'.'            reduce using rule 72
	';'            reduce using rule 72


State 29

	Stmt -> Modifier . '(' ListTerm ')' ':' LIdent '(' ListTerm ')'    (rule 35)

	'('            shift, and enter state 72


State 30

	IExp2 -> IExp3 .                                    (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'->'           reduce using rule 44
	'.'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44


State 31

	IExp1 -> IExp2 .                                    (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'->'           reduce using rule 46
	'.'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46


State 32

	IExp1 -> IExp1 . MulOp IExp2                        (rule 45)
	IExp -> IExp1 .                                     (rule 48)

	'!='           reduce using rule 48
	'%'            shift, and enter state 69
	')'            reduce using rule 48
	'*'            shift, and enter state 70
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'->'           reduce using rule 48
	'.'            reduce using rule 48
	'/'            shift, and enter state 71
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48

	MulOp          goto state 68

State 33

	Stmt -> IExp . RelOp IExp                           (rule 34)
	IExp -> IExp . AddOp IExp1                          (rule 47)

	'!='           shift, and enter state 60
	'+'            shift, and enter state 61
	'-'            shift, and enter state 62
	'<'            shift, and enter state 63
	'<='           shift, and enter state 64
	'=='           shift, and enter state 65
	'>'            shift, and enter state 66
	'>='           shift, and enter state 67

	AddOp          goto state 58
	RelOp          goto state 59

State 34

	Def -> DeclHeader ':-' ListStmt .                   (rule 11)

	'.'            reduce using rule 11


State 35

	Stmt -> '(' . Stmt '->' ListStmt ';' ListStmt ')'    (rule 36)
	IExp3 -> '(' . IExp ')'                             (rule 42)

	'('            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 37
	'True'         shift, and enter state 38
	'collect'      shift, and enter state 39
	'ext'          shift, and enter state 40
	'once'         shift, and enter state 41
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	Integer        goto state 25
	UIdent         goto state 26
	LIdent         goto state 27
	Stmt           goto state 56
	Modifier       goto state 29
	IExp3          goto state 30
	IExp2          goto state 31
	IExp1          goto state 32
	IExp           goto state 57

State 36

	IExp2 -> '-' . IExp3                                (rule 43)

	'('            shift, and enter state 55
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23

	Integer        goto state 25
	UIdent         goto state 53
	IExp3          goto state 54

State 37

	Stmt -> 'False' .                                   (rule 30)

	')'            reduce using rule 30
	','            reduce using rule 30
	'->'           reduce using rule 30
	'.'            reduce using rule 30
	';'            reduce using rule 30


State 38

	Stmt -> 'True' .                                    (rule 29)

	')'            reduce using rule 29
	','            reduce using rule 29
	'->'           reduce using rule 29
	'.'            reduce using rule 29
	';'            reduce using rule 29


State 39

	Modifier -> 'collect' .                             (rule 38)

	'('            reduce using rule 38


State 40

	Modifier -> 'ext' .                                 (rule 37)

	'('            reduce using rule 37


State 41

	Modifier -> 'once' .                                (rule 39)

	'('            reduce using rule 39


State 42

	Def -> '.decl' LIdent '(' . ListTypeArg '|' ListTypeArg ')'    (rule 8)

	'('            shift, and enter state 51
	'['            shift, and enter state 52
	'|'            reduce using rule 17
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 47
	LIdent         goto state 48
	TypeArg        goto state 49
	ListTypeArg    goto state 50

State 43

	Def -> '.decl' LIdent '[' . ListConstr ']' '(' ListTypeArg '|' ListTypeArg ')'    (rule 9)

	']'            reduce using rule 22
	L_UIdent       shift, and enter state 23

	UIdent         goto state 44
	Constr         goto state 45
	ListConstr     goto state 46

State 44

	Constr -> UIdent . '(' ListConstrVar ')'            (rule 20)

	'('            shift, and enter state 106


State 45

	ListConstr -> Constr .                              (rule 23)
	ListConstr -> Constr . ',' ListConstr               (rule 24)

	','            shift, and enter state 105
	']'            reduce using rule 23


State 46

	Def -> '.decl' LIdent '[' ListConstr . ']' '(' ListTypeArg '|' ListTypeArg ')'    (rule 9)

	']'            shift, and enter state 104


State 47

	TypeArg -> UIdent .                                 (rule 12)

	'('            reduce using rule 12
	')'            reduce using rule 12
	','            reduce using rule 12
	']'            reduce using rule 12
	'|'            reduce using rule 12


State 48

	TypeArg -> LIdent .                                 (rule 13)

	'('            reduce using rule 13
	')'            reduce using rule 13
	','            reduce using rule 13
	']'            reduce using rule 13
	'|'            reduce using rule 13


State 49

	TypeArg -> TypeArg . '(' ListTypeArg ')'            (rule 16)
	ListTypeArg -> TypeArg .                            (rule 18)
	ListTypeArg -> TypeArg . ',' ListTypeArg            (rule 19)

	'('            shift, and enter state 102
	')'            reduce using rule 18
	','            shift, and enter state 103
	'|'            reduce using rule 18


State 50

	Def -> '.decl' LIdent '(' ListTypeArg . '|' ListTypeArg ')'    (rule 8)

	'|'            shift, and enter state 101


State 51

	TypeArg -> '(' . ListTypeArg ')'                    (rule 15)

	'('            shift, and enter state 51
	')'            reduce using rule 17
	'['            shift, and enter state 52
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 47
	LIdent         goto state 48
	TypeArg        goto state 49
	ListTypeArg    goto state 100

State 52

	TypeArg -> '[' . TypeArg ']'                        (rule 14)

	'('            shift, and enter state 51
	'['            shift, and enter state 52
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 47
	LIdent         goto state 48
	TypeArg        goto state 99

State 53

	IExp3 -> UIdent .                                   (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'->'           reduce using rule 40
	'.'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40


State 54

	IExp2 -> '-' IExp3 .                                (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'->'           reduce using rule 43
	'.'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43


State 55

	IExp3 -> '(' . IExp ')'                             (rule 42)

	'('            shift, and enter state 55
	'-'            shift, and enter state 36
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23

	Integer        goto state 25
	UIdent         goto state 53
	IExp3          goto state 30
	IExp2          goto state 31
	IExp1          goto state 32
	IExp           goto state 98

State 56

	Stmt -> '(' Stmt . '->' ListStmt ';' ListStmt ')'    (rule 36)

	'->'           shift, and enter state 97


State 57

	Stmt -> IExp . RelOp IExp                           (rule 34)
	IExp3 -> '(' IExp . ')'                             (rule 42)
	IExp -> IExp . AddOp IExp1                          (rule 47)

	'!='           shift, and enter state 60
	')'            shift, and enter state 96
	'+'            shift, and enter state 61
	'-'            shift, and enter state 62
	'<'            shift, and enter state 63
	'<='           shift, and enter state 64
	'=='           shift, and enter state 65
	'>'            shift, and enter state 66
	'>='           shift, and enter state 67

	AddOp          goto state 58
	RelOp          goto state 59

State 58

	IExp -> IExp AddOp . IExp1                          (rule 47)

	'('            shift, and enter state 55
	'-'            shift, and enter state 36
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23

	Integer        goto state 25
	UIdent         goto state 53
	IExp3          goto state 30
	IExp2          goto state 31
	IExp1          goto state 95

State 59

	Stmt -> IExp RelOp . IExp                           (rule 34)

	'('            shift, and enter state 55
	'-'            shift, and enter state 36
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23

	Integer        goto state 25
	UIdent         goto state 53
	IExp3          goto state 30
	IExp2          goto state 31
	IExp1          goto state 32
	IExp           goto state 94

State 60

	RelOp -> '!=' .                                     (rule 59)

	'('            reduce using rule 59
	'-'            reduce using rule 59
	L_integ        reduce using rule 59
	L_UIdent       reduce using rule 59


State 61

	AddOp -> '+' .                                      (rule 49)

	'('            reduce using rule 49
	'-'            reduce using rule 49
	L_integ        reduce using rule 49
	L_UIdent       reduce using rule 49


State 62

	AddOp -> '-' .                                      (rule 50)

	'('            reduce using rule 50
	'-'            reduce using rule 50
	L_integ        reduce using rule 50
	L_UIdent       reduce using rule 50


State 63

	RelOp -> '<' .                                      (rule 54)

	'('            reduce using rule 54
	'-'            reduce using rule 54
	L_integ        reduce using rule 54
	L_UIdent       reduce using rule 54


State 64

	RelOp -> '<=' .                                     (rule 55)

	'('            reduce using rule 55
	'-'            reduce using rule 55
	L_integ        reduce using rule 55
	L_UIdent       reduce using rule 55


State 65

	RelOp -> '==' .                                     (rule 58)

	'('            reduce using rule 58
	'-'            reduce using rule 58
	L_integ        reduce using rule 58
	L_UIdent       reduce using rule 58


State 66

	RelOp -> '>' .                                      (rule 56)

	'('            reduce using rule 56
	'-'            reduce using rule 56
	L_integ        reduce using rule 56
	L_UIdent       reduce using rule 56


State 67

	RelOp -> '>=' .                                     (rule 57)

	'('            reduce using rule 57
	'-'            reduce using rule 57
	L_integ        reduce using rule 57
	L_UIdent       reduce using rule 57


State 68

	IExp1 -> IExp1 MulOp . IExp2                        (rule 45)

	'('            shift, and enter state 55
	'-'            shift, and enter state 36
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23

	Integer        goto state 25
	UIdent         goto state 53
	IExp3          goto state 30
	IExp2          goto state 93

State 69

	MulOp -> '%' .                                      (rule 53)

	'('            reduce using rule 53
	'-'            reduce using rule 53
	L_integ        reduce using rule 53
	L_UIdent       reduce using rule 53


State 70

	MulOp -> '*' .                                      (rule 51)

	'('            reduce using rule 51
	'-'            reduce using rule 51
	L_integ        reduce using rule 51
	L_UIdent       reduce using rule 51


State 71

	MulOp -> '/' .                                      (rule 52)

	'('            reduce using rule 52
	'-'            reduce using rule 52
	L_integ        reduce using rule 52
	L_UIdent       reduce using rule 52


State 72

	Stmt -> Modifier '(' . ListTerm ')' ':' LIdent '(' ListTerm ')'    (rule 35)

	'('            shift, and enter state 19
	')'            reduce using rule 68
	'['            shift, and enter state 20
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 17
	ListTerm       goto state 92

State 73

	ListStmt -> Stmt ',' . ListStmt                     (rule 73)

	'('            shift, and enter state 35
	')'            reduce using rule 71
	'-'            shift, and enter state 36
	'.'            reduce using rule 71
	';'            reduce using rule 71
	'False'        shift, and enter state 37
	'True'         shift, and enter state 38
	'collect'      shift, and enter state 39
	'ext'          shift, and enter state 40
	'once'         shift, and enter state 41
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	Integer        goto state 25
	UIdent         goto state 26
	LIdent         goto state 27
	Stmt           goto state 28
	Modifier       goto state 29
	IExp3          goto state 30
	IExp2          goto state 31
	IExp1          goto state 32
	IExp           goto state 33
	ListStmt       goto state 91

State 74

	Stmt -> LIdent '(' . ListTerm ')'                   (rule 31)

	'('            shift, and enter state 19
	')'            reduce using rule 68
	'['            shift, and enter state 20
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 17
	ListTerm       goto state 90

State 75

	Stmt -> UIdent '=' . Term                           (rule 32)

	'('            shift, and enter state 19
	'['            shift, and enter state 20
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 89

State 76

	Stmt -> UIdent 'is' . IExp                          (rule 33)

	'('            shift, and enter state 55
	'-'            shift, and enter state 36
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23

	Integer        goto state 25
	UIdent         goto state 53
	IExp3          goto state 30
	IExp2          goto state 31
	IExp1          goto state 32
	IExp           goto state 88

State 77

	Term -> '[' ListTerm . ']'                          (rule 64)

	']'            shift, and enter state 87


State 78

	Term -> '(' Term . ':' Term ')'                     (rule 65)
	ListTerm -> Term .                                  (rule 69)
	ListTerm -> Term . ',' ListTerm                     (rule 70)

	')'            reduce using rule 69
	','            shift, and enter state 81
	':'            shift, and enter state 86


State 79

	Term -> '(' ListTerm . ')'                          (rule 66)

	')'            shift, and enter state 85


State 80

	DeclHeader -> LIdent '(' ListTerm ')' .             (rule 28)

	'.'            reduce using rule 28
	':-'           reduce using rule 28


State 81

	ListTerm -> Term ',' . ListTerm                     (rule 70)

	'('            shift, and enter state 19
	')'            reduce using rule 68
	'['            shift, and enter state 20
	']'            reduce using rule 68
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 17
	ListTerm       goto state 84

State 82

	Term -> UIdent '(' . ListTerm ')'                   (rule 67)

	'('            shift, and enter state 19
	')'            reduce using rule 68
	'['            shift, and enter state 20
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 17
	ListTerm       goto state 83

State 83

	Term -> UIdent '(' ListTerm . ')'                   (rule 67)

	')'            shift, and enter state 121


State 84

	ListTerm -> Term ',' ListTerm .                     (rule 70)

	')'            reduce using rule 70
	']'            reduce using rule 70


State 85

	Term -> '(' ListTerm ')' .                          (rule 66)

	')'            reduce using rule 66
	','            reduce using rule 66
	'->'           reduce using rule 66
	'.'            reduce using rule 66
	':'            reduce using rule 66
	';'            reduce using rule 66
	']'            reduce using rule 66


State 86

	Term -> '(' Term ':' . Term ')'                     (rule 65)

	'('            shift, and enter state 19
	'['            shift, and enter state 20
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 120

State 87

	Term -> '[' ListTerm ']' .                          (rule 64)

	')'            reduce using rule 64
	','            reduce using rule 64
	'->'           reduce using rule 64
	'.'            reduce using rule 64
	':'            reduce using rule 64
	';'            reduce using rule 64
	']'            reduce using rule 64


State 88

	Stmt -> UIdent 'is' IExp .                          (rule 33)
	IExp -> IExp . AddOp IExp1                          (rule 47)

	')'            reduce using rule 33
	'+'            shift, and enter state 61
	','            reduce using rule 33
	'-'            shift, and enter state 62
	'->'           reduce using rule 33
	'.'            reduce using rule 33
	';'            reduce using rule 33

	AddOp          goto state 58

State 89

	Stmt -> UIdent '=' Term .                           (rule 32)

	')'            reduce using rule 32
	','            reduce using rule 32
	'->'           reduce using rule 32
	'.'            reduce using rule 32
	';'            reduce using rule 32


State 90

	Stmt -> LIdent '(' ListTerm . ')'                   (rule 31)

	')'            shift, and enter state 119


State 91

	ListStmt -> Stmt ',' ListStmt .                     (rule 73)

	')'            reduce using rule 73
	'.'            reduce using rule 73
	';'            reduce using rule 73


State 92

	Stmt -> Modifier '(' ListTerm . ')' ':' LIdent '(' ListTerm ')'    (rule 35)

	')'            shift, and enter state 118


State 93

	IExp1 -> IExp1 MulOp IExp2 .                        (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'->'           reduce using rule 45
	'.'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45


State 94

	Stmt -> IExp RelOp IExp .                           (rule 34)
	IExp -> IExp . AddOp IExp1                          (rule 47)

	')'            reduce using rule 34
	'+'            shift, and enter state 61
	','            reduce using rule 34
	'-'            shift, and enter state 62
	'->'           reduce using rule 34
	'.'            reduce using rule 34
	';'            reduce using rule 34

	AddOp          goto state 58

State 95

	IExp1 -> IExp1 . MulOp IExp2                        (rule 45)
	IExp -> IExp AddOp IExp1 .                          (rule 47)

	'!='           reduce using rule 47
	'%'            shift, and enter state 69
	')'            reduce using rule 47
	'*'            shift, and enter state 70
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'->'           reduce using rule 47
	'.'            reduce using rule 47
	'/'            shift, and enter state 71
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47

	MulOp          goto state 68

State 96

	IExp3 -> '(' IExp ')' .                             (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'->'           reduce using rule 42
	'.'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42


State 97

	Stmt -> '(' Stmt '->' . ListStmt ';' ListStmt ')'    (rule 36)

	'('            shift, and enter state 35
	'-'            shift, and enter state 36
	';'            reduce using rule 71
	'False'        shift, and enter state 37
	'True'         shift, and enter state 38
	'collect'      shift, and enter state 39
	'ext'          shift, and enter state 40
	'once'         shift, and enter state 41
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	Integer        goto state 25
	UIdent         goto state 26
	LIdent         goto state 27
	Stmt           goto state 28
	Modifier       goto state 29
	IExp3          goto state 30
	IExp2          goto state 31
	IExp1          goto state 32
	IExp           goto state 33
	ListStmt       goto state 117

State 98

	IExp3 -> '(' IExp . ')'                             (rule 42)
	IExp -> IExp . AddOp IExp1                          (rule 47)

	')'            shift, and enter state 96
	'+'            shift, and enter state 61
	'-'            shift, and enter state 62

	AddOp          goto state 58

State 99

	TypeArg -> '[' TypeArg . ']'                        (rule 14)
	TypeArg -> TypeArg . '(' ListTypeArg ')'            (rule 16)

	'('            shift, and enter state 102
	']'            shift, and enter state 116


State 100

	TypeArg -> '(' ListTypeArg . ')'                    (rule 15)

	')'            shift, and enter state 115


State 101

	Def -> '.decl' LIdent '(' ListTypeArg '|' . ListTypeArg ')'    (rule 8)

	'('            shift, and enter state 51
	')'            reduce using rule 17
	'['            shift, and enter state 52
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 47
	LIdent         goto state 48
	TypeArg        goto state 49
	ListTypeArg    goto state 114

State 102

	TypeArg -> TypeArg '(' . ListTypeArg ')'            (rule 16)

	'('            shift, and enter state 51
	')'            reduce using rule 17
	'['            shift, and enter state 52
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 47
	LIdent         goto state 48
	TypeArg        goto state 49
	ListTypeArg    goto state 113

State 103

	ListTypeArg -> TypeArg ',' . ListTypeArg            (rule 19)

	'('            shift, and enter state 51
	')'            reduce using rule 17
	'['            shift, and enter state 52
	'|'            reduce using rule 17
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 47
	LIdent         goto state 48
	TypeArg        goto state 49
	ListTypeArg    goto state 112

State 104

	Def -> '.decl' LIdent '[' ListConstr ']' . '(' ListTypeArg '|' ListTypeArg ')'    (rule 9)

	'('            shift, and enter state 111


State 105

	ListConstr -> Constr ',' . ListConstr               (rule 24)

	']'            reduce using rule 22
	L_UIdent       shift, and enter state 23

	UIdent         goto state 44
	Constr         goto state 45
	ListConstr     goto state 110

State 106

	Constr -> UIdent '(' . ListConstrVar ')'            (rule 20)

	')'            reduce using rule 25
	L_LIdent       shift, and enter state 9

	LIdent         goto state 107
	ConstrVar      goto state 108
	ListConstrVar  goto state 109

State 107

	ConstrVar -> LIdent .                               (rule 21)

	')'            reduce using rule 21
	','            reduce using rule 21


State 108

	ListConstrVar -> ConstrVar .                        (rule 26)
	ListConstrVar -> ConstrVar . ',' ListConstrVar      (rule 27)

	')'            reduce using rule 26
	','            shift, and enter state 129


State 109

	Constr -> UIdent '(' ListConstrVar . ')'            (rule 20)

	')'            shift, and enter state 128


State 110

	ListConstr -> Constr ',' ListConstr .               (rule 24)

	']'            reduce using rule 24


State 111

	Def -> '.decl' LIdent '[' ListConstr ']' '(' . ListTypeArg '|' ListTypeArg ')'    (rule 9)

	'('            shift, and enter state 51
	'['            shift, and enter state 52
	'|'            reduce using rule 17
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 47
	LIdent         goto state 48
	TypeArg        goto state 49
	ListTypeArg    goto state 127

State 112

	ListTypeArg -> TypeArg ',' ListTypeArg .            (rule 19)

	')'            reduce using rule 19
	'|'            reduce using rule 19


State 113

	TypeArg -> TypeArg '(' ListTypeArg . ')'            (rule 16)

	')'            shift, and enter state 126


State 114

	Def -> '.decl' LIdent '(' ListTypeArg '|' ListTypeArg . ')'    (rule 8)

	')'            shift, and enter state 125


State 115

	TypeArg -> '(' ListTypeArg ')' .                    (rule 15)

	'('            reduce using rule 15
	')'            reduce using rule 15
	','            reduce using rule 15
	']'            reduce using rule 15
	'|'            reduce using rule 15


State 116

	TypeArg -> '[' TypeArg ']' .                        (rule 14)

	'('            reduce using rule 14
	')'            reduce using rule 14
	','            reduce using rule 14
	']'            reduce using rule 14
	'|'            reduce using rule 14


State 117

	Stmt -> '(' Stmt '->' ListStmt . ';' ListStmt ')'    (rule 36)

	';'            shift, and enter state 124


State 118

	Stmt -> Modifier '(' ListTerm ')' . ':' LIdent '(' ListTerm ')'    (rule 35)

	':'            shift, and enter state 123


State 119

	Stmt -> LIdent '(' ListTerm ')' .                   (rule 31)

	')'            reduce using rule 31
	','            reduce using rule 31
	'->'           reduce using rule 31
	'.'            reduce using rule 31
	';'            reduce using rule 31


State 120

	Term -> '(' Term ':' Term . ')'                     (rule 65)

	')'            shift, and enter state 122


State 121

	Term -> UIdent '(' ListTerm ')' .                   (rule 67)

	')'            reduce using rule 67
	','            reduce using rule 67
	'->'           reduce using rule 67
	'.'            reduce using rule 67
	':'            reduce using rule 67
	';'            reduce using rule 67
	']'            reduce using rule 67


State 122

	Term -> '(' Term ':' Term ')' .                     (rule 65)

	')'            reduce using rule 65
	','            reduce using rule 65
	'->'           reduce using rule 65
	'.'            reduce using rule 65
	':'            reduce using rule 65
	';'            reduce using rule 65
	']'            reduce using rule 65


State 123

	Stmt -> Modifier '(' ListTerm ')' ':' . LIdent '(' ListTerm ')'    (rule 35)

	L_LIdent       shift, and enter state 9

	LIdent         goto state 133

State 124

	Stmt -> '(' Stmt '->' ListStmt ';' . ListStmt ')'    (rule 36)

	'('            shift, and enter state 35
	')'            reduce using rule 71
	'-'            shift, and enter state 36
	'False'        shift, and enter state 37
	'True'         shift, and enter state 38
	'collect'      shift, and enter state 39
	'ext'          shift, and enter state 40
	'once'         shift, and enter state 41
	L_integ        shift, and enter state 2
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	Integer        goto state 25
	UIdent         goto state 26
	LIdent         goto state 27
	Stmt           goto state 28
	Modifier       goto state 29
	IExp3          goto state 30
	IExp2          goto state 31
	IExp1          goto state 32
	IExp           goto state 33
	ListStmt       goto state 132

State 125

	Def -> '.decl' LIdent '(' ListTypeArg '|' ListTypeArg ')' .    (rule 8)

	'.'            reduce using rule 8


State 126

	TypeArg -> TypeArg '(' ListTypeArg ')' .            (rule 16)

	'('            reduce using rule 16
	')'            reduce using rule 16
	','            reduce using rule 16
	']'            reduce using rule 16
	'|'            reduce using rule 16


State 127

	Def -> '.decl' LIdent '[' ListConstr ']' '(' ListTypeArg . '|' ListTypeArg ')'    (rule 9)

	'|'            shift, and enter state 131


State 128

	Constr -> UIdent '(' ListConstrVar ')' .            (rule 20)

	','            reduce using rule 20
	']'            reduce using rule 20


State 129

	ListConstrVar -> ConstrVar ',' . ListConstrVar      (rule 27)

	')'            reduce using rule 25
	L_LIdent       shift, and enter state 9

	LIdent         goto state 107
	ConstrVar      goto state 108
	ListConstrVar  goto state 130

State 130

	ListConstrVar -> ConstrVar ',' ListConstrVar .      (rule 27)

	')'            reduce using rule 27


State 131

	Def -> '.decl' LIdent '[' ListConstr ']' '(' ListTypeArg '|' . ListTypeArg ')'    (rule 9)

	'('            shift, and enter state 51
	')'            reduce using rule 17
	'['            shift, and enter state 52
	L_UIdent       shift, and enter state 23
	L_LIdent       shift, and enter state 9

	UIdent         goto state 47
	LIdent         goto state 48
	TypeArg        goto state 49
	ListTypeArg    goto state 136

State 132

	Stmt -> '(' Stmt '->' ListStmt ';' ListStmt . ')'    (rule 36)

	')'            shift, and enter state 135


State 133

	Stmt -> Modifier '(' ListTerm ')' ':' LIdent . '(' ListTerm ')'    (rule 35)

	'('            shift, and enter state 134


State 134

	Stmt -> Modifier '(' ListTerm ')' ':' LIdent '(' . ListTerm ')'    (rule 35)

	'('            shift, and enter state 19
	')'            reduce using rule 68
	'['            shift, and enter state 20
	'_'            shift, and enter state 21
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 22
	L_UIdent       shift, and enter state 23

	Integer        goto state 14
	String         goto state 15
	UIdent         goto state 16
	Term           goto state 17
	ListTerm       goto state 138

State 135

	Stmt -> '(' Stmt '->' ListStmt ';' ListStmt ')' .    (rule 36)

	')'            reduce using rule 36
	','            reduce using rule 36
	'->'           reduce using rule 36
	'.'            reduce using rule 36
	';'            reduce using rule 36


State 136

	Def -> '.decl' LIdent '[' ListConstr ']' '(' ListTypeArg '|' ListTypeArg . ')'    (rule 9)

	')'            shift, and enter state 137


State 137

	Def -> '.decl' LIdent '[' ListConstr ']' '(' ListTypeArg '|' ListTypeArg ')' .    (rule 9)

	'.'            reduce using rule 9


State 138

	Stmt -> Modifier '(' ListTerm ')' ':' LIdent '(' ListTerm . ')'    (rule 35)

	')'            shift, and enter state 139


State 139

	Stmt -> Modifier '(' ListTerm ')' ':' LIdent '(' ListTerm ')' .    (rule 35)

	')'            reduce using rule 35
	','            reduce using rule 35
	'->'           reduce using rule 35
	'.'            reduce using rule 35
	';'            reduce using rule 35


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 74
Number of terminals: 35
Number of non-terminals: 27
Number of states: 140
